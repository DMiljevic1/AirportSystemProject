@page "/CheckinPassengerList/{flightId}"
@inject PassengerService _passengerService;
@inject UserService _userService;
@inject NavigationManager _navigationManager;

@if (Users == null)
{
    <p>Loading...</p>
}
else
{
    @if (Users.FirstOrDefault(user => user.IsLogged == true) == null)
    {
        <h3>You don't have permission to view this page</h3>
    }
    else
    {
        <h3>List Of Checked Passengers</h3>

        @if (passengers == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <table class="table table-responsive">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Sex</th>
                        <th>Number Of Luggage</th>
                        <th>Seat</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var passenger in passengers)
                    {
                        @if (passenger.FlightId == int.Parse(flightId) && passenger.IsChecked == true)
                        {
                            <tr>
                                <td>@passenger.FirstName</td>
                                <td>@passenger.LastName</td>
                                <td>@passenger.Sex</td>
                                <td>@passenger.NumberOfLuggage (@passenger.LuggageWeight kg in total)</td>
                                <td>@passenger.Seat</td>
                                <td>
                                    <a href="/documentDetails/@passenger.Id" class="btn btn-primary">
                                        <span class="oi oi-list"></span>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <button type="button" class="btn btn-secondary" @onclick="Close">
                <span class="oi oi-media-skip-backward"></span>
                Close
            </button>
        }
    }
}



@code {
    public List<Passenger> passengers { get; set; }
    [Parameter]
    public string flightId { get; set; }
    public List<User> Users { get; set; }
    protected override async Task OnInitializedAsync()
    {
        passengers = await _passengerService.GetPassengersAsync();
        Users = await _userService.GetUsersAsync();
    }
    private void Close()
    {
        _navigationManager.NavigateTo("/");
    }
}